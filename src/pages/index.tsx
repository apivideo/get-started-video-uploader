import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import { ChangeEvent, useState } from 'react';
import axios from 'axios';


export default function Home() {
  const [videoList, setVideoList] = useState<string>("");
  const [nextBtnPage, setNextBtnPage] = useState<number>(1)
  const [prevBtnPage, setPrevBtnPage] = useState<number>(1)
  const [nextBtnDisable, setNexBtnDisable] = useState<boolean>(true)
  const [prevBtnDisable, setPrevBtnDisable] = useState<boolean>(true)
  const [uploadBtnDisable, setUploadBtnDisable] = useState<boolean>(false);
  const [uploadStatus, setUploadStatus] = useState<string>("")
  const [file, setFile] = useState<File>();

  const handleFileChange = (e: ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setFile(e.target.files[0]);
    }
  };

  const generateNextButton = (pagination: any) => {
    if(pagination.currentPage < pagination.pagesTotal) {
      setNextBtnPage(pagination.currentPage +1)
    }
    if ( pagination.currentPage === pagination.pagesTotal) {
      setNexBtnDisable(true)
    } else {
      setNexBtnDisable(false)
    }
  }
  const checkUploadStatus = async (videoId: string) => {
    return axios.post('http://localhost:5500/uploadStatus', {videoId: videoId}).then( res => {
      return res.data
    })
  }

  const generatePrevButton = (pagination: any) => {
    if(pagination.currentPage <= pagination.pagesTotal && pagination.currentPage > 1 ) {
      setPrevBtnPage(pagination.currentPage -1)
    }
    if ( pagination.currentPage === 1) {
      setPrevBtnDisable(true)
    } else {
      setPrevBtnDisable(false)
    }
  }

  const ListVideoPage = (page: number) => {
    axios.post('http://localhost:5500/videos', {page: page}).then(res => {
      const videoListArray = res.data.data;
      generateNextButton(res.data.pagination)
      generatePrevButton(res.data.pagination)
      const StrigifiedVideoList = videoListArray.map( (element: any) => {
        return `<div style="width: 33%; float: left">
        <h5>${element.title}</h5><a href=${element.assets.player}><img height="100" width="100" src=${element.assets.thumbnail}></div>`})
      setVideoList(StrigifiedVideoList);
    })
  }

  const handleUploadClick = () => {
    if (!file) {
      return;
    }
    const data = new FormData();
    data.append('file', file)
    setUploadBtnDisable(true)
    setUploadStatus("Uploading...")
    axios.post('http://localhost:5500/upload', data).then( async res => {
      let playableStatus;
      let failSafe = 0
      const uploadVideoId = res.data
      while(playableStatus !== true && failSafe < 30) {
        const uploadStatus = await checkUploadStatus(uploadVideoId)
        playableStatus = uploadStatus.encoding.playable
        if(playableStatus === true) {
          setUploadStatus("Upload successful")
          setUploadBtnDisable(false)
        }
        failSafe++
      }
    })
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
      <div  className={styles.container}>
      <label className={styles.h1}>Select file to upload:</label>
      <div>Select a video file up to 200MB in size to upload</div>
      <br></br>
      <input  type="file" id="fileupload" onChange={handleFileChange} />
      <div  > {file && `${file.name} - ${file.type}`}</div>
      <button className={styles.block} disabled={uploadBtnDisable} onClick={handleUploadClick}>Upload</button>
      <div className={styles.blockStatic}>Upload Status: {uploadStatus}</div>
      </div>
      <div className={styles.rounded}></div>
      <div className={styles.container}>
        <label className={styles.h1}>Show the list of uploaded videos:</label>
        <div>Click on the button below to show all the videos in the workspace</div>
        <button  className={styles.block} onClick={() => ListVideoPage(1)}>Show Uploaded Videos</button>
        <div className={styles.container}>
        </div>
        <div  dangerouslySetInnerHTML={{ __html: videoList}}>
        </div>
        <button className={styles.blockStatic} disabled={prevBtnDisable} onClick={() => ListVideoPage(prevBtnPage)}>Previous Page</button>
        <button className={styles.blockStatic}  disabled={nextBtnDisable} onClick={() => ListVideoPage(nextBtnPage)}>Next Page</button>
      </div>
      </main>
    </>
  )
}
